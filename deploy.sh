#!/bin/bash

# –§–∞–π–ª –ª–æ–≥–æ–≤
LOG_FILE="/var/log/deploy.log"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏ –ª–æ–≥
log() {
    echo -e "$1" | tee -a "$LOG_FILE"
}

log "===== DEPLOY START: $(date) ====="
log "üë§ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $(whoami)"

# –ü—É—Ç–∏
PROJECT_DIR="/var/www/tokenguard"
SERVICE_NAME="tokenguard"
GIT_BRANCH="design-update"  # –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è –≤–µ—Ç–∫–∏

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
log "üìÅ –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é $PROJECT_DIR"
cd "$PROJECT_DIR" || { log "‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –≤ $PROJECT_DIR"; exit 1; }

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ç–∫–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
log "üì• –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏–∑ git..."
git fetch origin || log "‚ö†Ô∏è –û—à–∏–±–∫–∞ git fetch, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
if git show-ref --verify --quiet "refs/remotes/origin/$GIT_BRANCH"; then
    git reset --hard "origin/$GIT_BRANCH" || log "‚ö†Ô∏è –û—à–∏–±–∫–∞ git reset, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
else
    log "‚ö†Ô∏è –í–µ—Ç–∫–∞ origin/$GIT_BRANCH –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º git reset"
fi

# –û—á–∏—Å—Ç–∫–∞ –Ω–µ–æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤, –∫—Ä–æ–º–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
log "üßπ –û—á–∏—Å—Ç–∫–∞ untracked —Ñ–∞–π–ª–æ–≤ (venv, .env –∏ —Ç.–¥. —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è)"
git clean -fd -e tokenguard_venv -e .env -e .git -e .gitignore -e deploy.sh || log "‚ö†Ô∏è –û—à–∏–±–∫–∞ git clean, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
log "üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ $SERVICE_NAME..."
if systemctl restart "$SERVICE_NAME"; then
    log "‚úÖ –°–µ—Ä–≤–∏—Å $SERVICE_NAME —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
else
    log "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–∏—Å–∞ $SERVICE_NAME"
    exit 1
fi

log "‚úÖ DEPLOY FINISHED: $(date)"
